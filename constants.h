//
// Created by lenovo on 7/30/2025.
//

#ifndef BITBOARD_H
#define BITBOARD_H

// === Chess Piece values (bitboard index) ===
#define PIECE_PAWN     0
#define PIECE_KNIGHT   1
#define PIECE_BISHOP   2
#define PIECE_ROOK     3
#define PIECE_QUEEN    4
#define PIECE_KING     5

#define PIECE_WPAWN     PIECE_PAWN
#define PIECE_WKNIGHT   PIECE_KNIGHT
#define PIECE_WBISHOP   PIECE_BISHOP
#define PIECE_WROOK     PIECE_ROOK
#define PIECE_WQUEEN    PIECE_QUEEN
#define PIECE_WKING     PIECE_KING

#define PIECE_BPAWN     (PIECE_PAWN   | 16)
#define PIECE_BKNIGHT   (PIECE_KNIGHT | 16)
#define PIECE_BBISHOP   (PIECE_BISHOP | 16)
#define PIECE_BROOK     (PIECE_ROOK   | 16)
#define PIECE_BQUEEN    (PIECE_QUEEN  | 16)
#define PIECE_BKING     (PIECE_KING   | 16)

#define INDEX_PAWN     0
#define INDEX_KNIGHT   1
#define INDEX_BISHOP   2
#define INDEX_ROOK     3
#define INDEX_QUEEN    4
#define INDEX_KING     5

#define INDEX_WPAWN     0
#define INDEX_WKNIGHT   1
#define INDEX_WBISHOP   2
#define INDEX_WROOK     3
#define INDEX_WQUEEN    4
#define INDEX_WKING     5

#define INDEX_BPAWN     6
#define INDEX_BKNIGHT   7
#define INDEX_BBISHOP   8
#define INDEX_BROOK     9
#define INDEX_BQUEEN    10
#define INDEX_BKING     11

#define PIECE_EMPTY     -1  // Not used in bitboards but may help in logic
#define INDEX_EMPTY     -1

// === castling ===

#define CASTLE_WHITE_K 0x1
#define CASTLE_WHITE_Q 0x2
#define CASTLE_WHITE   0x3
#define CASTLE_BLACK_K 0x4
#define CASTLE_BLACK_Q 0x8
#define CASTLE_BLACK   0xC

// === enpasant ===

// === Move generation ===
#define MAX_MOVES              256
#define MOVE_FLAG_CAPTURE      0x01
#define MOVE_FLAG_PROMOTION    0x02
#define MOVE_FLAG_ENPASSANT    0x04
#define MOVE_FLAG_CASTLE       0x08

#define MASK_FILE_A  0x0101010101010101ULL  // File a: bits   0,  8, 16, ..., 56
#define MASK_FILE_B  0x0202020202020202ULL  // File b: bits   1,  9, 17, ..., 57
#define MASK_FILE_C  0x0404040404040404ULL  // File c: bits   2, 10, 18, ..., 58
#define MASK_FILE_D  0x0808080808080808ULL  // File d: bits   3, 11, 19, ..., 59
#define MASK_FILE_E  0x1010101010101010ULL  // File e: bits   4, 12, 20, ..., 60
#define MASK_FILE_F  0x2020202020202020ULL  // File f: bits   5, 13, 21, ..., 61
#define MASK_FILE_G  0x4040404040404040ULL  // File g: bits   6, 14, 22, ..., 62
#define MASK_FILE_H  0x8080808080808080ULL  // File h: bits   7, 15, 23, ..., 63

#define MASK_RANK_1  0x00000000000000FFULL  // bits  0–7   (rank 0 in 0-based indexing)
#define MASK_RANK_2  0x000000000000FF00ULL  // bits  8–15
#define MASK_RANK_3  0x0000000000FF0000ULL  // bits  16–23
#define MASK_RANK_4  0x00000000FF000000ULL  // bits  24–31
#define MASK_RANK_5  0x000000FF00000000ULL  // bits  32–39
#define MASK_RANK_6  0x0000FF0000000000ULL  // bits  40–47
#define MASK_RANK_7  0x00FF000000000000ULL  // bits  48–55
#define MASK_RANK_8  0xFF00000000000000ULL  // bits  56–63

#define EDGE_MASK    (MASK_FILE_A | MASK_FILE_H | MASK_RANK_1 | MASK_RANK_8)

static const uint64_t FILE_MASKS[8] = {
    MASK_FILE_A,
    MASK_FILE_B,
    MASK_FILE_C,
    MASK_FILE_D,
    MASK_FILE_E,
    MASK_FILE_F,
    MASK_FILE_G,
    MASK_FILE_H
};

static const uint64_t RANK_MASKS[8] = {
    MASK_RANK_1,
    MASK_RANK_2,
    MASK_RANK_3,
    MASK_RANK_4,
    MASK_RANK_5,
    MASK_RANK_6,
    MASK_RANK_7,
    MASK_RANK_8,
};

#define MAGIC_ROOK_NUM_0 0x80005221804000ULL
#define MAGIC_ROOK_SHIFT_0 12

#define MAGIC_ROOK_NUM_1 0xc0004220001000ULL
#define MAGIC_ROOK_SHIFT_1 11

#define MAGIC_ROOK_NUM_2 0x1000c1060004100ULL
#define MAGIC_ROOK_SHIFT_2 11

#define MAGIC_ROOK_NUM_3 0x880100004800800ULL
#define MAGIC_ROOK_SHIFT_3 11

#define MAGIC_ROOK_NUM_4 0x100021008001500ULL
#define MAGIC_ROOK_SHIFT_4 11

#define MAGIC_ROOK_NUM_5 0x200104108040200ULL
#define MAGIC_ROOK_SHIFT_5 11

#define MAGIC_ROOK_NUM_6 0x200071428820008ULL
#define MAGIC_ROOK_SHIFT_6 11

#define MAGIC_ROOK_NUM_7 0x880132041000080ULL
#define MAGIC_ROOK_SHIFT_7 12

#define MAGIC_ROOK_NUM_8 0x9002108800042ULL
#define MAGIC_ROOK_SHIFT_8 11

#define MAGIC_ROOK_NUM_9 0x44c401000200040ULL
#define MAGIC_ROOK_SHIFT_9 10

#define MAGIC_ROOK_NUM_10 0x4001002005044050ULL
#define MAGIC_ROOK_SHIFT_10 10

#define MAGIC_ROOK_NUM_11 0x1000900100064ULL
#define MAGIC_ROOK_SHIFT_11 10

#define MAGIC_ROOK_NUM_12 0x1001800110006ULL
#define MAGIC_ROOK_SHIFT_12 10

#define MAGIC_ROOK_NUM_13 0xa005005080200ULL
#define MAGIC_ROOK_SHIFT_13 10

#define MAGIC_ROOK_NUM_14 0x209002100240200ULL
#define MAGIC_ROOK_SHIFT_14 10

#define MAGIC_ROOK_NUM_15 0x43000200804300ULL
#define MAGIC_ROOK_SHIFT_15 11

#define MAGIC_ROOK_NUM_16 0x40228008884000ULL
#define MAGIC_ROOK_SHIFT_16 11

#define MAGIC_ROOK_NUM_17 0x102020020804104ULL
#define MAGIC_ROOK_SHIFT_17 10

#define MAGIC_ROOK_NUM_18 0x80430020010032ULL
#define MAGIC_ROOK_SHIFT_18 10

#define MAGIC_ROOK_NUM_19 0x8410100200c1001ULL
#define MAGIC_ROOK_SHIFT_19 10

#define MAGIC_ROOK_NUM_20 0x1200d0008010090ULL
#define MAGIC_ROOK_SHIFT_20 10

#define MAGIC_ROOK_NUM_21 0x39010100080e0400ULL
#define MAGIC_ROOK_SHIFT_21 10

#define MAGIC_ROOK_NUM_22 0x80140001100208ULL
#define MAGIC_ROOK_SHIFT_22 10

#define MAGIC_ROOK_NUM_23 0x200024c05a1ULL
#define MAGIC_ROOK_SHIFT_23 11

#define MAGIC_ROOK_NUM_24 0x180004040002010ULL
#define MAGIC_ROOK_SHIFT_24 11

#define MAGIC_ROOK_NUM_25 0x1010064040002000ULL
#define MAGIC_ROOK_SHIFT_25 10

#define MAGIC_ROOK_NUM_26 0x41044500200012ULL
#define MAGIC_ROOK_SHIFT_26 10

#define MAGIC_ROOK_NUM_27 0x9020900205000ULL
#define MAGIC_ROOK_SHIFT_27 10

#define MAGIC_ROOK_NUM_28 0x4402002200150810ULL
#define MAGIC_ROOK_SHIFT_28 10

#define MAGIC_ROOK_NUM_29 0x4001040801102040ULL
#define MAGIC_ROOK_SHIFT_29 10

#define MAGIC_ROOK_NUM_30 0x4241000101020004ULL
#define MAGIC_ROOK_SHIFT_30 10

#define MAGIC_ROOK_NUM_31 0x8108a0021004cULL
#define MAGIC_ROOK_SHIFT_31 11

#define MAGIC_ROOK_NUM_32 0x80004000402004ULL
#define MAGIC_ROOK_SHIFT_32 11

#define MAGIC_ROOK_NUM_33 0x125201000400042ULL
#define MAGIC_ROOK_SHIFT_33 10

#define MAGIC_ROOK_NUM_34 0x4000401301002001ULL
#define MAGIC_ROOK_SHIFT_34 10

#define MAGIC_ROOK_NUM_35 0x519000a21001000ULL
#define MAGIC_ROOK_SHIFT_35 10

#define MAGIC_ROOK_NUM_36 0x308008008804401ULL
#define MAGIC_ROOK_SHIFT_36 10

#define MAGIC_ROOK_NUM_37 0x2000832007024ULL
#define MAGIC_ROOK_SHIFT_37 10

#define MAGIC_ROOK_NUM_38 0x1100104002802ULL
#define MAGIC_ROOK_SHIFT_38 10

#define MAGIC_ROOK_NUM_39 0x68008402001069ULL
#define MAGIC_ROOK_SHIFT_39 11

#define MAGIC_ROOK_NUM_40 0x80004020044002ULL
#define MAGIC_ROOK_SHIFT_40 11

#define MAGIC_ROOK_NUM_41 0x4090014020024000ULL
#define MAGIC_ROOK_SHIFT_41 10

#define MAGIC_ROOK_NUM_42 0x559006000350040ULL
#define MAGIC_ROOK_SHIFT_42 10

#define MAGIC_ROOK_NUM_43 0x2021090010010022ULL
#define MAGIC_ROOK_SHIFT_43 10

#define MAGIC_ROOK_NUM_44 0x4008040080800ULL
#define MAGIC_ROOK_SHIFT_44 10

#define MAGIC_ROOK_NUM_45 0x10100a214010008ULL
#define MAGIC_ROOK_SHIFT_45 10

#define MAGIC_ROOK_NUM_46 0x240900020041001cULL
#define MAGIC_ROOK_SHIFT_46 10

#define MAGIC_ROOK_NUM_47 0x122089100420004ULL
#define MAGIC_ROOK_SHIFT_47 11

#define MAGIC_ROOK_NUM_48 0x800400022800080ULL
#define MAGIC_ROOK_SHIFT_48 11

#define MAGIC_ROOK_NUM_49 0x20024004802080ULL
#define MAGIC_ROOK_SHIFT_49 10

#define MAGIC_ROOK_NUM_50 0x1014020041100ULL
#define MAGIC_ROOK_SHIFT_50 10

#define MAGIC_ROOK_NUM_51 0x10001020408a0200ULL
#define MAGIC_ROOK_SHIFT_51 10

#define MAGIC_ROOK_NUM_52 0x118003400420040ULL
#define MAGIC_ROOK_SHIFT_52 10

#define MAGIC_ROOK_NUM_53 0x204204064100801ULL
#define MAGIC_ROOK_SHIFT_53 10

#define MAGIC_ROOK_NUM_54 0x100052208100400ULL
#define MAGIC_ROOK_SHIFT_54 10

#define MAGIC_ROOK_NUM_55 0x6021b0401804600ULL
#define MAGIC_ROOK_SHIFT_55 11

#define MAGIC_ROOK_NUM_56 0x5020010864022ULL
#define MAGIC_ROOK_SHIFT_56 12

#define MAGIC_ROOK_NUM_57 0x4100400124810451ULL
#define MAGIC_ROOK_SHIFT_57 11

#define MAGIC_ROOK_NUM_58 0x5400082000104101ULL
#define MAGIC_ROOK_SHIFT_58 11

#define MAGIC_ROOK_NUM_59 0xc041001a10009ULL
#define MAGIC_ROOK_SHIFT_59 11

#define MAGIC_ROOK_NUM_60 0x8200a010444806ULL
#define MAGIC_ROOK_SHIFT_60 11

#define MAGIC_ROOK_NUM_61 0x902000310080452ULL
#define MAGIC_ROOK_SHIFT_61 11

#define MAGIC_ROOK_NUM_62 0x8c0224810010284ULL
#define MAGIC_ROOK_SHIFT_62 11

#define MAGIC_ROOK_NUM_63 0x900040300624082ULL
#define MAGIC_ROOK_SHIFT_63 12

#ifndef WHITE
#define WHITE false
#endif

#ifndef BLACK
#define BLACK true
#endif

#endif // BITBOARD_H

